%% Search for a specified operating point for the model - F550_model_trim.
%
% This MATLAB script is the command line equivalent of the trim model
% tab in linear analysis tool with current specifications and options.
% It produces the exact same operating points as hitting the Trim button.

% MATLAB(R) file generated by MATLAB(R) 24.1 and Simulink Control Design (TM) 24.1.
%
% Generated on: 24-Jul-2024 17:09:16

%% Specify the model name
model = 'F550_model_trim';

%% Create the operating point specification object.
opspec = operspec(model);

%% Set the constraints on the states in the model.
% - The defaults for all states are Known = false, SteadyState = true,
%   Min = -Inf, Max = Inf, dxMin = -Inf, and dxMax = Inf.

% State (1) - F550_model_trim/F550_Dynamics|F550_Dynamics/F550_Dynamic_Model/Motor Model/MotorNonlinearDynamic1/Motor_Dynamics (1st order)/Integrator
opspec.States(1).x = 418.879020478639;

% State (2) - F550_model_trim/F550_Dynamics|F550_Dynamics/F550_Dynamic_Model/Motor Model/MotorNonlinearDynamic2/Motor_Dynamics (1st order)/Integrator
opspec.States(2).x = 418.879020478639;

% State (3) - F550_model_trim/F550_Dynamics|F550_Dynamics/F550_Dynamic_Model/Motor Model/MotorNonlinearDynamic3/Motor_Dynamics (1st order)/Integrator
opspec.States(3).x = 418.879020478639;

% State (4) - F550_model_trim/F550_Dynamics|F550_Dynamics/F550_Dynamic_Model/Motor Model/MotorNonlinearDynamic4/Motor_Dynamics (1st order)/Integrator
opspec.States(4).x = 418.879020478639;

% State (5) - F550_model_trim/F550_Dynamics|F550_Dynamics/F550_Dynamic_Model/Motor Model/MotorNonlinearDynamic5/Motor_Dynamics (1st order)/Integrator
opspec.States(5).x = 418.879020478639;

% State (6) - F550_model_trim/F550_Dynamics|F550_Dynamics/F550_Dynamic_Model/Motor Model/MotorNonlinearDynamic6/Motor_Dynamics (1st order)/Integrator
opspec.States(6).x = 418.879020478639;

% State (7) - F550_model_trim/F550_Dynamics|F550_Dynamics/F550_Dynamic_Model/dynamic and kinematic mdel/states
% - Default model initial conditions are used to initialize optimization.
opspec.States(7).Known = [true;true;true;true;true;true;true;true;true;true;true;true];

%% Set the constraints on the inputs in the model.
% - The defaults for all inputs are Known = false, Min = -Inf, and
% Max = Inf.

% Input (1) - F550_model_trim/Control_Inputs
opspec.Inputs(1).u = [0;0;0;0];

%% Set the constraints on the outputs in the model.
% - The defaults for all outputs are Known = false, Min = -Inf, and
% Max = Inf.

% Output (1) - F550_model_trim/y
% - Default model initial conditions are used to initialize optimization.

% Output (2) - F550_model_trim/Vt
% - Default model initial conditions are used to initialize optimization.


%% Create the options
opt = findopOptions('DisplayReport','iter');

%% Perform the operating point search.
[op,opreport] = findop(model,opspec,opt);


%% Written By SSLEE
for i=1:6
    motorRpm0(i)=30/pi*opreport.states(i).x;
end
x0=opreport.states(7).x;
u0=opreport.inputs.u;

fprintf('u0 = '), fprintf('%8.4f ',u0), fprintf(' \n')
x0', motorRpm0
eval(['save trim_V', num2str(0), ' u0 x0 motorRpm0'])

%% Verification of trim data
out = sim('F550_verify_trim.slx',100);
    a=out.states_out;

    % plot response
    figure(1)
    n=3; m=3; k=1;
    subplot(n,m,k), k=k+1; plot(out.tout, a(:,1), 'LineWidth',1.5), ylabel('U(m/s)'), grid
    subplot(n,m,k), k=k+1; plot(out.tout, a(:,2), 'LineWidth',1.5), ylabel('V(m/s)'), grid
    subplot(n,m,k), k=k+1; plot(out.tout, a(:,3), 'LineWidth',1.5), ylabel('W(m/s)'), grid

    subplot(n,m,k), k=k+1; plot(out.tout, 57.3*a(:,4), 'LineWidth',1.5), ylabel('p(deg/sec)'), grid
    subplot(n,m,k), k=k+1; plot(out.tout, 57.3*a(:,5), 'LineWidth',1.5), ylabel('q(deg/sec)'), grid
    subplot(n,m,k), k=k+1; plot(out.tout, 57.3*a(:,6), 'LineWidth',1.5), ylabel('r(deg/sec)'), grid

    subplot(n,m,k), k=k+1; plot(out.tout, 57.3*a(:,7), 'LineWidth',1.5), ylabel('phi(deg)'), grid
    subplot(n,m,k), k=k+1; plot(out.tout, 57.3*a(:,8), 'LineWidth',1.5), ylabel('theta(deg)'), grid
    subplot(n,m,k), k=k+1; plot(out.tout, 57.3*a(:,9), 'LineWidth',1.5), ylabel('psi(deg)'), grid
    shg
